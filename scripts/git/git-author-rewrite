#!/usr/bin/env bash

# Unoffical Bash "strict mode"
# http://redsymbol.net/articles/unofficial-bash-strict-mode/
set -euo pipefail
#ORIGINAL_IFS=$IFS
IFS=$'\t\n' # Stricter IFS settings

usage() {
    cat <<EOF
    Usage: git-author-rewrite [options]

    Options:
    --old         The old email address you want to replace
    --new-email   The new email address to use
    --new-name    The new name to use
EOF
}

error_exit() {
    usage
    exit 1
}

get_value() {
    first=${1#*=}
    second=$2

    # TODO: Use sed to parse the arguments?
    #export OUTPUT=`echo $1 | sed -e 's/^[^=]*=//g'`
    if [ -z "$first" ]; then
        if [[ $second == "-*" ]]; then
            echo ""
        else
            echo $second
        fi
    else
        echo $first
    fi
}

while :; do
    case ${1:-} in
        -h|-\?|--help)
            usage
            exit
            ;;
        -o|--old|--old=*)
            OLD_EMAIL=$(get_value $1 ${2-""})
            ;;
        -n|--new-email|--new-email=*)
            CORRECT_EMAIL=$(get_value $1 ${2:-""})
            ;;
        -a|--new-name|--new-name=*)
            CORRECT_NAME=$(get_value $1 ${2:-""})
            ;;
        --)
            shift
            break
            ;;
        *)
            if [ -z "${1:-}" ]; then
                break
            else
                echo "Unknown option ${1:-}"
                error_exit
            fi
    esac

    shift
done

export OLD_EMAIL
export CORRECT_EMAIL
export CORRECT_NAME

git filter-branch --env-filter '
if [ "$GIT_COMMITTER_EMAIL" = "$OLD_EMAIL" ]
then
    echo "Fixed committer info"
    export GIT_COMMITTER_NAME="$CORRECT_NAME"
    export GIT_COMMITTER_EMAIL="$CORRECT_EMAIL"
fi
if [ "$GIT_AUTHOR_EMAIL" = "$OLD_EMAIL" ]
then
    echo "Fixed author info"
    export GIT_AUTHOR_NAME="$CORRECT_NAME"
    export GIT_AUTHOR_EMAIL="$CORRECT_EMAIL"
fi
' --tag-name-filter cat -- --branches --tags
